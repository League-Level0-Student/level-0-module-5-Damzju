package algorithms;
/*
 *    Copyright (c) The League of Amazing Programmers 2013-2017
 *    Level 0
 */

import javax.swing.JOptionPane;

public class GuessingPi {
	// 1. Make a main method and make sure your program can run
	public static void main(String[] args) {

		// 2. Make a String variable to hold the value of Pi.
		// Get the first few digits from http://www.piday.org/million/.
		String pi0 = "3.14159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798214808"
				+ "6513282306647093844609550582231725359408128481117450284102701938521105559644622948954930381964428810975665933446"
				+ "1284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209"
				+ "6282925409171536436789259036001133053054882046652138414695194151160943305727036575959195309218611738193261179310"
				+ "5118548074462379962749567351885752724891227938183011949129833673362440656643086021394946395224737190702179860943"
				+ "7027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534"
				+ "3014654958537105079227968925892354201995611212902196086403441815981362977477130996051870721134999999837297804995"
				+ "1059731732816096318595024459455346908302642522308253344685035261931188171010003137838752886587533208381420617177"
				+ "6691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380"
				+ "9525720106548586327886593615338182796823030195203530185296899577362259941389124972177528347913151557485724245415"
				+ "0695950829533116861727855889075098381754637464939319255060400927701671139009848824012858361603563707660104710181"
				+ "9429555961989467678374494482553797747268471040475346462080466842590694912933136770289891521047521620569660240580"
				+ "3815019351125338243003558764024749647326391419927260426992279678235478163600934172164121992458631503028618297455"
				+ "5706749838505494588586926995690927210797509302955321165344987202755960236480665499119881834797753566369807426542"
				+ "5278625518184175746728909777727938000816470600161452491921732172147723501414419735685481613611573525521334757418"
				+ "4946843852332390739414333454776241686251898356948556209921922218427255025425688767179049460165346680498862723279"
				+ "1786085784383827967976681454100953883786360950680064225125205117392984896084128488626945604241965285022210661186"
				+ "3067442786220391949450471237137869609563643719172874677646575739624138908658326459958133904780275900994657640789"
				+ "5126946839835259570982582262052248940772671947826848260147699090264013639443745530506820349625245174939965143142"
				+ "9809190659250937221696461515709858387410597885959772975498930161753928468138268683868942774155991855925245953959"
				+ "4310499725246808459872736446958486538367362226260991246080512438843904512441365497627807977156914359977001296160"
				+ "8944169486855584840635342207222582848864815845602850601684273945226746767889525213852254995466672782398645659611"
				+ "6354886230577456498035593634568174324112515076069479451096596094025228879710893145669136867228748940560101503308"
				+ "6179286809208747609178249385890097149096759852613655497818931297848216829989487226588048575640142704775551323796"
				+ "4145152374623436454285844479526586782105114135473573952311342716610213596953623144295248493718711014576540359027"
				+ "9934403742007310578539062198387447808478489683321445713868751943506430218453191048481005370614680674919278191197"
				+ "9399520614196634287544406437451237181921799983910159195618146751426912397489409071864942319615679452080951465502"
				+ "2523160388193014209376213785595663893778708303906979207734672218256259966150142150306803844773454920260541466592"
				+ "5201497442850732518666002132434088190710486331734649651453905796268561005508106658796998163574736384052571459102"
				+ "8970641401109712062804390397595156771577004203378699360072305587631763594218731251471205329281918261861258673215"
				+ "7919841484882916447060957527069572209175671167229109816909152801735067127485832228718352093539657251210835791513"
				+ "6988209144421006751033467110314126711136990865851639831501970165151168517143765761835155650884909989859982387345"
				+ "52833163550764791853589322618548";
		// 3. Print out the first 3 digits of Pi to the console.
		// The first value is "pi.charAt(0)", the second is "pi.charAt(1)", etc.
		// Run your program to see how this works.
		System.out.println(pi0.charAt(0));
		System.out.println(pi0.charAt(2));
		System.out.println(pi0.charAt(3));
		// 9. If you want to give the user more than one chance to guess,
		// put a for loop around steps 4-8.

		// 4. Create a for loop that will step through each digit of pi (steps 5-8)
		// NOTE: The number of digits in your string will be
		// yourStringVariable.length()
		for (int i = 0; i < pi0.length(); i++) {
			
		}
		// 5. Ask the user for the NEXT digit of pi.
		JOptionPane.showInputDialog("What is the next digit?");
		// 6. Compare the user's input to the next digit of your pi variable
		// (look at step 3 for a clue).
		// HINT: use charAt(0) to get 1st char of user input String

		// 7. If they are correct, print out "correct".

		// 8. If they are not, print out "incorrect" and tell them
		// to start over. Use 'break;' to break out of the loop.

	}
}
